name: '[BUILD] Docker Image CI'

on:
  workflow_dispatch:
    inputs:
      phase:
        description: 'Build Phase'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod

concurrency:
  group: ${{ github.workflow }}-${{ github.event.inputs.phase }}
  cancel-in-progress: true

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: kharacter
  IMAGE_NAME: ${{ inputs.phase }}
  TARGET_WORK_FLOW_FILE: ecs-deploy.yml

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: ${{ inputs.phase }}
    env:
      PHASE: ${{ inputs.phase }}
    steps:
      - name: Check input Value
        run: |
          echo "$PHASE"

      - name: Checkout
        uses: actions/checkout@v3

      - name: Create .env file
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
        run: |
          jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' <<< "$SECRETS_CONTEXT" > .env

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get Short SHA
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ env.SHORT_SHA }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_NAME

          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_NAME

          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
  trigger-dev-deploy:
    if: inputs.phase == 'dev'
    needs: build-and-push
    runs-on: ubuntu-latest
    env:
      REPO_OWNER: dev-novela
      REPO: ci-cd-test
      TARGET_WORK_FLOW_FILE: ecs-deploy.yml
      GITHUB_SECRET: ${{ secrets.WORKFLOW_PAT }}

    steps:
      - uses: actions/checkout@v2

      - name: trigger ecs deploy (dev)
        run: |
          echo "https://api.github.com/repos/$REPO_OWNER/$REPO/actions/workflows/$TARGET_WORK_FLOW_FILE/dispatches"
          echo "{"ref":"${{ github.ref }}","inputs":{"phase":"dev"}}"
            curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_SECRET" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$REPO_OWNER/$REPO/actions/workflows/$TARGET_WORK_FLOW_FILE/dispatches \
            -d "{\"ref\":\"${{ github.ref }}\",\"inputs\":{\"phase\":\"dev\"}}"
